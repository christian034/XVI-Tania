---
const images = [
  "/Gallery/image1.jpg",
  "/Gallery/image2.jpg",
  "/Gallery/image3.jpg",
  "/Gallery/image4.jpg",
  "/Gallery/image5.jpg",
  "/Gallery/image6.jpg",
];
---

<section class="gallery-container animate-fade-in animate-delay-500 mt-32 mx-auto flex flex-col justify-center items-center text-center text-primary w-full">
    <span class="uppercase text-2xl font-medium flex flex-col max-w-sm mt-6">Galeria de fotos</span>
    <div class="gallery-grid">
        {images.map((image, index) => (
            <div class="gallery-item">
                <img
                    src={image}
                    alt={`Imagen ${index + 1}`}
                    class="gallery-image"
                    data-index={index}
                />
            </div>
        ))}
    </div>
    
    <!-- Modal -->
    <div id="image-modal" class="modal hidden">
        <div class="modal-content">
            <button class="prev-button">&larr;</button>
            <img class="justify-center" id="modal-image" src="" alt="Imagen Modal" />
            <button class="next-button">&rarr;</button>
            <span class="close-button">&times;</span>
        </div>
    </div>
</section>

<script is:inline>
    document.addEventListener('DOMContentLoaded', () => {
        const modal = document.getElementById('image-modal');
        const modalImage = document.getElementById('modal-image');
        const closeButton = modal.querySelector('.close-button');
        const prevButton = modal.querySelector('.prev-button');
        const nextButton = modal.querySelector('.next-button');
        const images = Array.from(document.querySelectorAll('.gallery-image'));
        let currentIndex = 0;
        
        // Abre el modal al hacer clic en una imagen
        images.forEach((image, index) => {
            image.addEventListener('click', () => {
                currentIndex = index; // Establece la imagen actual
                updateModalImage();
                modal.classList.remove('hidden'); // Muestra el modal
                setTimeout(() => modal.classList.add('show'), 10); // Activa la transición
            });
        });

        // Actualiza la imagen del modal
        function updateModalImage() {
            modalImage.src = images[currentIndex].src;
        }

        // Cierra el modal
        closeButton.addEventListener('click', () => {
            modal.classList.remove('show'); // Elimina la transición
            setTimeout(() => {
                modal.classList.add('hidden');
                modalImage.src = ''; // Limpia la imagen del modal
            }, 300); // Espera el tiempo de la transición
        });

        // Navega a la imagen anterior
        prevButton.addEventListener('click', () => {
            currentIndex = (currentIndex - 1 + images.length) % images.length;
            updateModalImage();
        });

        // Navega a la imagen siguiente
        nextButton.addEventListener('click', () => {
            currentIndex = (currentIndex + 1) % images.length;
            updateModalImage();
        });

        // Cierra el modal al hacer clic fuera de la imagen
        modal.addEventListener('click', (e) => {
            if (e.target === modal) {
                modal.classList.remove('show');
                setTimeout(() => {
                    modal.classList.add('hidden');
                    modalImage.src = '';
                }, 300);
            }
        });
    });
</script>


<style>
    /* Contenedor de la galería */
    .gallery-container {
        max-width: 2400px;
        margin: 0 auto;
        padding: 2rem;
    }

    /* Diseño en cuadrícula */
    .gallery-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
        gap: 1rem;
    }

    .gallery-item img {
        width: 100%;
        height: 100%;
        object-fit: cover;
        border-radius: 8px;
        cursor: pointer;
        transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

    .gallery-item img:hover {
        transform: scale(1.05);
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
    }
    
    /* Modal */
    .modal {
        display: flex;
        justify-content: center;
        align-items: center;
        position: fixed;
        top: 0;
        left: 0;
        width: auto;
        height: auto;
        background: rgba(0, 0, 0, 0.8);
        z-index: 1000;
        padding: 1rem;
        opacity: 0;
        transform: scale(0.95);
        transition: opacity 0.3s ease, transform0.3s ease, transform1.3s ease;
        overflow: hidden; /* Evita que el contenido se desborde */
    }
        
    .modal.show {
        opacity: 1;
        transform: scale(1);
    }

    .modal.hidden {
        display: none;
    }

    .modal-content {
        position: relative;
        max-width: 60%; /* Ajusta el ancho del modal */
        max-height: 80%; /* Ajusta la altura del modal */
        display: flex;
        justify-content: center;
        align-items: center;
        background: white; /* Fondo blanco */
        border-radius: 8px; /* Bordes redondeados */
        padding: 1rem; /* Espaciado interno */
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2); /* Sombra del modal */
        overflow: hidden; /* Evita que el contenido se desborde */
    }

    /* Ajustes para computadoras grandes */
    @media screen and (min-width: 1025px) {
        .modal-content {
            max-width: 40%; /* Más compacto en computadoras */
            max-height: 60%;
        }
    }

    /* Ajustes para tabletas */
    @media screen and (min-width: 769px) and (max-width: 1024px) {
        .modal-content {
            max-width: 60%; /* Más ancho en tabletas */
            max-height: 80%;
        }
    }

    /* Ajustes para teléfonos */
    @media screen and (max-width: 768px) {
        .modal-content {
            max-width: 90%; /* Ocupa casi todo el ancho */
            max-height: 90%;
        }
    }

    .modal-content img {
        width: auto;
        max-width: 100%;
        height: auto;
        max-height: 100%;
        border-radius: 8px;
        /*box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);*/
    }

    .close-button {
        position: absolute;
        top: 10px;
        right: 10px;
        font-size: 2rem;
        color: white;
        cursor: pointer;
        background: none;
        border: none;
        outline: none;
        transition: transform 0.3s ease;
    }

    .close-button:hover {
        transform: scale(1.2);
    }

    /* Botones de navegación */
    .prev-button,
    .next-button {
        position: absolute;
        top: 50%;
        transform: translateY(-50%);
        font-size: 2rem;
        color: white;
        background: rgba(0, 0, 0, 0.5);
        border: none;
        border-radius: 50%;
        cursor: pointer;
        width: 50px;
        height: 50px;
        display: flex;
        justify-content: center;
        align-items: center;
        transition: background 0.3s ease, transform 0.3s ease;
    }

    .prev-button:hover,
    .next-button:hover {
        background: rgba(255, 255, 255, 0.8);
        color: black;
        transform: scale(1.1);
    }

    .prev-button {
        left: 10px;
    }

    .next-button {
        right: 10px;
    }
</style>
